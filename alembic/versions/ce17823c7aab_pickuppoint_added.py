"""PickupPoint added

Revision ID: ce17823c7aab
Revises: b645f3246c5e
Create Date: 2025-05-31 21:03:36.464056

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ce17823c7aab'
down_revision: Union[str, None] = 'b645f3246c5e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pickup_points',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('district', sa.Text(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('google_map_location', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Orders')
    op.drop_column('banners', 'created')
    op.drop_column('banners', 'updated')
    op.drop_column('categories', 'created')
    op.drop_column('categories', 'updated')
    op.drop_column('deliverers', 'created')
    op.drop_column('deliverers', 'updated')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('deliverers', sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('deliverers', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('categories', sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('categories', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('banners', sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('banners', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_table('Orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('delivery_address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('deliverer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['deliverer_id'], ['deliverers.id'], name='Orders_deliverer_id_fkey1', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='Orders_user_id_fkey1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Orders_pkey1')
    )
    op.drop_table('pickup_points')
    # ### end Alembic commands ###
