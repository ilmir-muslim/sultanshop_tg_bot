"""убраны даты создания и обновления из базовой модели, внесены некоторые правки

Revision ID: b645f3246c5e
Revises: b4226169c9f2
Create Date: 2025-05-31 19:58:09.279174

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b645f3246c5e'
down_revision: Union[str, None] = 'b4226169c9f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('banner', 'banners')
    op.rename_table('category', 'categories')
    op.rename_table('deliverer', 'deliverers')
    op.rename_table('product', 'products')
    op.rename_table('cart', 'carts')
    op.drop_constraint('deliverer_reviews_deliverer_id_fkey', 'deliverer_reviews', type_='foreignkey')
    op.create_foreign_key(None, 'deliverer_reviews', 'deliverers', ['deliverer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('deliverer_reviews', 'updated')
    op.drop_column('deliverer_reviews', 'created')
    op.drop_constraint('order_item_product_id_fkey', 'order_item', type_='foreignkey')
    op.create_foreign_key(None, 'order_item', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_column('order_item', 'updated')
    op.drop_column('order_item', 'created')
    op.drop_constraint('Orders_deliverer_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'deliverers', ['deliverer_id'], ['id'], ondelete='SET NULL')
    op.drop_column('sellers', 'updated')
    op.drop_column('sellers', 'created')
    op.drop_column('users', 'updated')
    op.drop_column('users', 'created')
    op.drop_constraint('wait_list_product_id_fkey', 'wait_list', type_='foreignkey')
    op.create_foreign_key(None, 'wait_list', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_column('wait_list', 'updated')
    op.drop_column('wait_list', 'created')
    # ### end Alembic commands ###


def downgrade() -> None:
    # Вернуть удалённые колонки
    op.add_column('wait_list', sa.Column('created', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('wait_list', sa.Column('updated', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('users', sa.Column('created', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('users', sa.Column('updated', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('sellers', sa.Column('created', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('sellers', sa.Column('updated', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('order_item', sa.Column('created', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('order_item', sa.Column('updated', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('deliverer_reviews', sa.Column('created', postgresql.TIMESTAMP(), nullable=False))
    op.add_column('deliverer_reviews', sa.Column('updated', postgresql.TIMESTAMP(), nullable=False))

    # Пересоздать внешние ключи (если менялись)
    op.drop_constraint(None, 'wait_list', type_='foreignkey')
    op.create_foreign_key('wait_list_product_id_fkey', 'wait_list', 'product', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('Orders_deliverer_id_fkey', 'orders', 'deliverer', ['deliverer_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint(None, 'order_item', type_='foreignkey')
    op.create_foreign_key('order_item_product_id_fkey', 'order_item', 'product', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'deliverer_reviews', type_='foreignkey')
    op.create_foreign_key('deliverer_reviews_deliverer_id_fkey', 'deliverer_reviews', 'deliverer', ['deliverer_id'], ['id'], ondelete='CASCADE')

    # Переименовать таблицы обратно
    op.rename_table('banners', 'banner')
    op.rename_table('categories', 'category')
    op.rename_table('deliverers', 'deliverer')
    op.rename_table('products', 'product')
    op.rename_table('carts', 'cart')
        # ### end Alembic commands ###
